// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/task (interfaces: BackoffOptions)

// Package pubsub is a generated GoMock package.
package pubsub

import (
	gomock "github.com/golang/mock/gomock"
	task "github.com/spoke-d/task"
	reflect "reflect"
)

// MockBackoffOptions is a mock of BackoffOptions interface
type MockBackoffOptions struct {
	ctrl     *gomock.Controller
	recorder *MockBackoffOptionsMockRecorder
}

// MockBackoffOptionsMockRecorder is the mock recorder for MockBackoffOptions
type MockBackoffOptionsMockRecorder struct {
	mock *MockBackoffOptions
}

// NewMockBackoffOptions creates a new mock instance
func NewMockBackoffOptions(ctrl *gomock.Controller) *MockBackoffOptions {
	mock := &MockBackoffOptions{ctrl: ctrl}
	mock.recorder = &MockBackoffOptionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBackoffOptions) EXPECT() *MockBackoffOptionsMockRecorder {
	return m.recorder
}

// SetBackoff mocks base method
func (m *MockBackoffOptions) SetBackoff(arg0 task.BackoffFunc) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBackoff", arg0)
}

// SetBackoff indicates an expected call of SetBackoff
func (mr *MockBackoffOptionsMockRecorder) SetBackoff(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBackoff", reflect.TypeOf((*MockBackoffOptions)(nil).SetBackoff), arg0)
}
